"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1891],{1905:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/react-native-stylewind/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/react-native-stylewind/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"category","label":"Theming","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Customization","href":"/react-native-stylewind/docs/theme/customization","docId":"theme/customization","unlisted":false},{"type":"link","label":"useTheme","href":"/react-native-stylewind/docs/theme/useTheme","docId":"theme/useTheme","unlisted":false}]},{"type":"category","label":"Utility Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"createStyle","href":"/react-native-stylewind/docs/utility-functions/create-style","docId":"utility-functions/create-style","unlisted":false},{"type":"link","label":"styles","href":"/react-native-stylewind/docs/utility-functions/styles","docId":"utility-functions/styles","unlisted":false}]},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Colors","href":"/react-native-stylewind/docs/reference/colors","docId":"reference/colors","unlisted":false},{"type":"link","label":"Spacing","href":"/react-native-stylewind/docs/reference/spacing","docId":"reference/spacing","unlisted":false},{"type":"link","label":"Typography","href":"/react-native-stylewind/docs/reference/typography","docId":"reference/typography","unlisted":false},{"type":"link","label":"Utility styles","href":"/react-native-stylewind/docs/reference/utilities","docId":"reference/utilities","unlisted":false}]},{"type":"link","label":"Contributing","href":"/react-native-stylewind/docs/contributing","docId":"contributing","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/react-native-stylewind/docs/troubleshooting","docId":"troubleshooting","unlisted":false}]},"docs":{"contributing":{"id":"contributing","title":"Contributing","description":"Guidelines for contributing to the project.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"First, install the package via npm:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Ever wished you had the flexibility of utility-first styling in React Native, but with better maintainability, type-safety, and more developer freedom? Well, that\'s exactly what React Native Stylewind delivers! \ud83c\udf89 With this library, you can enjoy dynamic style generation based on your custom theme, and still keep your styles clean, reusable, and highly maintainable.","sidebar":"tutorialSidebar"},"reference/colors":{"id":"reference/colors","title":"Colors","description":"---","sidebar":"tutorialSidebar"},"reference/spacing":{"id":"reference/spacing","title":"Spacing","description":"---","sidebar":"tutorialSidebar"},"reference/typography":{"id":"reference/typography","title":"Typography","description":"---","sidebar":"tutorialSidebar"},"reference/utilities":{"id":"reference/utilities","title":"Utility styles","description":"This document provides a reference for the utility styles available in the project.","sidebar":"tutorialSidebar"},"theme/customization":{"id":"theme/customization","title":"Theme customization","description":"The rn-stylewind theme can be customized by modifying theme.config.mjs. You can override colors, spacing, typography, and utilities.","sidebar":"tutorialSidebar"},"theme/useTheme":{"id":"theme/useTheme","title":"useTheme()","description":"The useTheme hook allows you to access the theme context within your React Native components. This hook provides an easy way to retrieve the current theme properties, check if dark mode is enabled, and toggle between light and dark themes.","sidebar":"tutorialSidebar"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Common issues and solutions.","sidebar":"tutorialSidebar"},"utility-functions/create-style":{"id":"utility-functions/create-style","title":"createStyle","description":"The createStyle function allows you to define structured and reusable styles with full TypeScript support. It integrates with your theme, enabling dynamic values and utility-based styling.","sidebar":"tutorialSidebar"},"utility-functions/styles":{"id":"utility-functions/styles","title":"styles()","description":"The styles function allows developers to apply utility classes dynamically. It automatically selects the appropriate styles based on the current theme mode, ensuring a seamless dark/light mode experience.","sidebar":"tutorialSidebar"}}}}')}}]);