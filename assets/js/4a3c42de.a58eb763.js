"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7819],{778:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"utility-functions/create-style","title":"createStyle","description":"The createStyle function allows you to define structured and reusable styles with full TypeScript support. It integrates with your theme, enabling dynamic values and utility-based styling.","source":"@site/docs/utility-functions/create-style.mdx","sourceDirName":"utility-functions","slug":"/utility-functions/create-style","permalink":"/react-native-stylewind/docs/utility-functions/create-style","draft":false,"unlisted":false,"editUrl":"https://github.com/shervin-ghajar/react-native-stylewind/edit/main/website/docs/utility-functions/create-style.mdx","tags":[],"version":"current","frontMatter":{"title":"createStyle"},"sidebar":"tutorialSidebar","previous":{"title":"Utility Functions"},"next":{"title":"styles","permalink":"/react-native-stylewind/docs/utility-functions/styles"}}');var r=n(612),i=n(9837);const l={title:"createStyle"},o=void 0,c={},a=[];function u(t){const e={code:"code",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"createStyle"})," function allows you to define structured and reusable styles with full TypeScript support. It integrates with your theme, enabling dynamic values and utility-based styling."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { createStyle, styles } from 'rn-stylewind';\r\n\r\nconst useMyStyles = createStyle({\r\n  container: (theme) => ({\r\n    padding: theme.spacing.md,\r\n    backgroundColor: theme.utilities.bgBackground.backgroundColor,\r\n    ...theme.utilities['p-1'], // Using utility style\r\n  }),\r\n  text: {\r\n    padding: 4,\r\n  },\r\n});\r\n\r\nfunction MyComponent() {\r\n  const myStyles = useMyStyles();\r\n  return (\r\n    <View style={styles([myStyles.container])}>\r\n      <Text style={styles([myStyles.text])}>Hello, world!</Text>\r\n    </View>\r\n  );\r\n}\n"})})]})}function y(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(u,{...t})}):u(t)}},9837:(t,e,n)=>{n.d(e,{R:()=>l,x:()=>o});var s=n(4344);const r={},i=s.createContext(r);function l(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:l(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);