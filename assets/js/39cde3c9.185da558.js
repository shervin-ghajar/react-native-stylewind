"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2302],{354:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"theme/useTheme","title":"useTheme()","description":"The useTheme hook allows you to access the theme context within your React Native components. This hook provides an easy way to retrieve the current theme properties, check if dark mode is enabled, and toggle between light and dark themes.","source":"@site/docs/theme/useTheme.mdx","sourceDirName":"theme","slug":"/theme/useTheme","permalink":"/react-native-stylewind/docs/theme/useTheme","draft":false,"unlisted":false,"editUrl":"https://github.com/shervin-ghajar/react-native-stylewind/edit/main/website/docs/theme/useTheme.mdx","tags":[],"version":"current","frontMatter":{"title":"useTheme()","sidebar_label":"useTheme"},"sidebar":"tutorialSidebar","previous":{"title":"Customization","permalink":"/react-native-stylewind/docs/theme/customization"},"next":{"title":"Utility Functions"}}');var o=n(612),r=n(6088);const i={title:"useTheme()",sidebar_label:"useTheme"},a=void 0,c={},h=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"useTheme"})," hook allows you to access the theme context within your React Native components. This hook provides an easy way to retrieve the current theme properties, check if dark mode is enabled, and toggle between light and dark themes."]}),"\n",(0,o.jsxs)(t.p,{children:["To use the ",(0,o.jsx)(t.code,{children:"useTheme"})," hook, follow the example below:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import { useTheme, styles } from 'rn-stylewind';\n\nexport const MyComponent = () => {\n  const { theme, isDarkMode, toggleMode } = useTheme();\n\n  return (\n    <View style={styles([isDarkMode ? 'bgBlack' : 'bgWhite'])}>\n      <Text style={styles(['textPrimary'])}>Current Theme: {theme.mode}</Text>\n      <Button title=\"Toggle Theme\" onPress={toggleMode} />\n    </View>\n  );\n};\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},6088:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(4344);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);